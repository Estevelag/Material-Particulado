library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(orcutt)
library(tidyr)
library(broom)
library(plyr)
dataDiametros <- read.csv("../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.csv")
dataDiametros <- dataDiametros[dataDiametros$Nombre.común != 'Grosello',]
attach(dataDiametros)
vaciosDiametro <-dataDiametros[is.na(dataDiametros$Diametro),] # Empty records
#dataDiametros <- dataDiametros[!is.na(dataDiametros$Diametro),]
colnames(dataDiametros)[7] <- "Biomasa_g"
dataDiametros$MP2.5area <- dataDiametros$Material_2.5/dataDiametros$Area
# Ordenar especies segun Mediana del MP 2.5
aux <- aggregate(MP2.5area ~ Nombre.común, dataDiametros, median, na.action = na.omit)
Namesmax2.5 <- head(aux[order(-aux$MP2.5area),],9)
data2 <- dataDiametros[Nombre.común %in% Namesmax2.5$Nombre.común, ]
box_plot_25p <-ggplot(data2 ,aes(x = data2$Nombre.común, y=data2$MP2.5area,fill=data2$Nombre.común))+
geom_boxplot() +
theme(panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position = "none",
plot.title = element_text(family = "Helvetica", face = "bold", size = (17), hjust = 0.5),
axis.title.x = element_text(size = 15, family = "Helvetica", face = "bold",colour="black"),
axis.title.y = element_text(size = 15, family = "Helvetica", face = "bold",colour="black"),
axis.text.x = element_text(size = 11, hjust = 1, family = "Helvetica", face="bold",colour="black"))+
xlab("Nombre común del árbol") +
ggtitle('9 especies de árbol en EAFIT que más MP 2.5 capturan') +
ylab("MP2.5 por área")
box_plot_25p
# Ordenar especies segun Mediana del MP 10
dataDiametros$MP10area <- dataDiametros$Material_10/dataDiametros$Area
aux <- aggregate(MP10area ~ Nombre.común, dataDiametros, median, na.action=na.omit)
Namesmax10 <- head(aux[order(-aux$MP10area),],9)
data2 <- dataDiametros[Nombre.común %in% Namesmax10$Nombre.común, ]
box_plot_10p <-ggplot(data2 ,aes(x = data2$Nombre.común, y=data2$MP10area,fill=data2$Nombre.común))+
geom_boxplot() +
theme(panel.background = element_rect(fill = "transparent"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "transparent", color = NA),
legend.position = "none",
plot.title = element_text(family = "Helvetica", face = "bold", size = (17), hjust = 0.5),
axis.title.x = element_text(size = 15, family = "Helvetica", face = "bold",colour="black"),
axis.title.y = element_text(size = 15, family = "Helvetica", face = "bold",colour="black"),
axis.text.x = element_text(size = 11, hjust = 1, family = "Helvetica", face="bold",colour="black"))+
xlab("Nombre común del árbol") +
ggtitle('9 especies de árbol en EAFIT que más MP 10 capturan') +
ylab("MP10 por área")
box_plot_10p
dataAreas <- read.csv("../data/Datos_para_modelo/BasedatosAREABIOMASA4.csv", sep=';')
dataAreas$Area <- as.numeric(dataAreas$Area)
dataAreas$Biomasa_g <- as.numeric(dataAreas$Biomasa_g)
attach(dataAreas)
vaciosArea <-dataAreas[is.na(dataAreas$Area),] # Empty records
#dataAreas <- dataAreas[!is.na(dataAreas$Area),]
# Regresion Area por especie
modelArea <- by(dataAreas,dataAreas$Especie, function (df) lm(Area ~ Biomasa_g, data = df))
Rcuadrado <- lapply(rownames(modelArea), function (especie) summary(modelArea[[especie]])$r.squared)
pAreas <-ggplot(data=data.frame(especie=rownames(modelArea), r=unlist(Rcuadrado)),
aes(x=reorder(especie,-r), y=r)) + geom_bar(stat="identity")
# Recorte de Outliers
significancia = .95
recorte <- function (df) {
distances = mahalanobis(df[,5:6],colMeans(df[,5:6]),cov(df[,5:6]))
cutoff =quantile(distances, significancia)
outliers = df[distances < cutoff,]
return(outliers)
}
dataAreasclean <- by(dataAreas, dataAreas$Especie, function(df) recorte(df))
modelArea <- lapply(rownames(dataAreasclean), function (especie)
lm(Area ~ Biomasa_g,
data = dataAreasclean[[especie]]))
Rcuadrado   <- lapply(modelArea, function (df) summary(df)$r.squared)
pAreasclean <-ggplot(data=data.frame(especie=rownames(dataAreasclean), r=unlist(Rcuadrado)),
aes(x=reorder(especie,-r), y=r)) + geom_bar(stat="identity")+theme(axis.text.x = element_text(size = 5, hjust = 1, family = "Helvetica",colour="black"))
pAreasclean
summary(Area)
newdata <- data.frame(one_stuff = c("jaja","jeje"), Biomasa_g = c(0.2,0.0001), other_stuff = c(345,355))
#test_model <- lm(Area ~ Biomasa_g,data = dataAreasclean[["Abarco"]])
#test_model
#predictions <- predict.lm(test_model,newdata)
#predictions <- predict.lm(modelArea[[1]],newdata)
newdata$pred_area <- predict.lm(modelArea[[1]],newdata)
test <- setNames(modelArea,rownames(dataAreasclean))
predict_vals <- function(df){
#print(df)
species <- unique(df$Nombre.común)
print(species)
if (!is.null(test[[species]])){
df$pred_area <- predict.lm(test[[species]],df)
return(df)
}else{
print("not_area")
}
#df$pred_area <- predict.lm(test[[species]],df)
#return(df)
}
predicted_area <- by(dataDiametros, dataDiametros$Nombre.común, function(df) predict_vals(df))
## Toca que "modelArea" este definido globalmente y que tenga indexado los nombres la especie correspondiente
View(predicted_area)
View(predicted_area)
type(predicted_area)
dtype(predicted_area)
d<-data.frame(predicted_area)
as.data.frame(predicted_area)
predicted_area[0]
predicted_area[[0]]
library(dplyr)
d<-bind_rows(predicted_area)
predicted_area[[0]]
predicted_area[[1]]
data.farem(predicted_area[[1]])
data.frame(predicted_area[[1]])
d
# making a dataframe of predicted areas to make a prediction of the entire particulate material
d<-data.frame(predicted_area[[1]])
for (j in 1:length(predicted_area)){
if (predicted_area[[j]]!='not_area'){
d<-rbind(d,predicted_area[[j]])
}
}
d
View(d)
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-predict(modelo_10, newdata = d)
dataAreas <- read.csv("../data/Datos_para_modelo/BasedatosAREABIOMASA4.csv", sep=';')
dataAreas$Area <- as.numeric(dataAreas$Area)
dataAreas$Biomasa_g <- as.numeric(dataAreas$Biomasa_g)
attach(dataAreas)
vaciosArea <-dataAreas[is.na(dataAreas$Area),] # Empty records
#dataAreas <- dataAreas[!is.na(dataAreas$Area),]
# Regresion Area por especie
modelArea <- by(dataAreas,dataAreas$Especie, function (df) lm(Area ~ Biomasa_g, data = df))
Rcuadrado <- lapply(rownames(modelArea), function (especie) summary(modelArea[[especie]])$r.squared)
pAreas <-ggplot(data=data.frame(especie=rownames(modelArea), r=unlist(Rcuadrado)),
aes(x=reorder(especie,-r), y=r)) + geom_bar(stat="identity")
# Recorte de Outliers
significancia = .95
recorte <- function (df) {
distances = mahalanobis(df[,5:6],colMeans(df[,5:6]),cov(df[,5:6]))
cutoff =quantile(distances, significancia)
outliers = df[distances < cutoff,]
return(outliers)
}
dataAreasclean <- by(dataAreas, dataAreas$Especie, function(df) recorte(df))
modelArea <- lapply(rownames(dataAreasclean), function (especie)
lm(Area ~ Biomasa_g,
data = dataAreasclean[[especie]]))
Rcuadrado   <- lapply(modelArea, function (df) summary(df)$r.squared)
pAreasclean <-ggplot(data=data.frame(especie=rownames(dataAreasclean), r=unlist(Rcuadrado)),
aes(x=reorder(especie,-r), y=r)) + geom_bar(stat="identity")+theme(axis.text.x = element_text(size = 5, hjust = 1, family = "Helvetica",colour="black"))
pAreasclean
summary(Area)
newdata <- data.frame(one_stuff = c("jaja","jeje"), Biomasa_g = c(0.2,0.0001), other_stuff = c(345,355))
#test_model <- lm(Area ~ Biomasa_g,data = dataAreasclean[["Abarco"]])
#test_model
#predictions <- predict.lm(test_model,newdata)
#predictions <- predict.lm(modelArea[[1]],newdata)
newdata$pred_area <- predict.lm(modelArea[[1]],newdata)
test <- setNames(modelArea,rownames(dataAreasclean))
predict_vals <- function(df){
#print(df)
species <- unique(df$Nombre.común)
print(species)
if (!is.null(test[[species]])){
df$pred_area <- predict.lm(test[[species]],df)
return(df)
}else{
print("not_area")
}
#df$pred_area <- predict.lm(test[[species]],df)
#return(df)
}
predicted_area <- by(dataDiametros, dataDiametros$Nombre.común, function(df) predict_vals(df))
## Toca que "modelArea" este definido globalmente y que tenga indexado los nombres la especie correspondiente
to_eliminate <- c(62)
MP2.5 <- lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja, data=dataDiametros)#[-to_eliminate,]
anova(MP2.5)
bptest(MP2.5)
gvlma(MP2.5)
shapiro.test(MP2.5$residuals)
summary(MP2.5)
# if bptest not enough
reg <-cochrane.orcutt(MP2.5)
summary(reg)
bptest(reg)
bptest(reg)
shapiro.test(reg$residuals)
modelo_10 <- lm(log(Material_10) ~ log(Area) + Tipo_Hoja,data=dataDiametros[-c(62),])#[-c(32,61,62,168,242),])
summary(modelo_10)
nonparmod10 <- aov(log(Material_10) ~ log(Area) + factor(Tipo_Hoja),data=dataDiametros[-c(62),])
summary(nonparmod10)
anova(modelo_10)
gvlma(modelo_10)
shapiro.test(nonparmod10$residuals)
plot(modelo_10)
#gvlma(modelo_10)
shapiro.test(modelo_10$residuals)
bptest(modelo_10)
dataDiametros <- dataDiametros[!is.na(dataDiametros$Area),]
#Tests no requieren de supuestos
kruskal.test(log(Material_10) ~  Tipo_Hoja, data=dataDiametros[-c(62),])
wilcox.test( log(Area), log(Material_10), alternative = "two.sided")
## tests without log that don't require assumptions
kruskal.test(Material_10 ~  Tipo_Hoja, data=dataDiametros[-c(62),])
wilcox.test( Area, Material_10, alternative = "two.sided")
#########IF the coeficients are not right and ther is another way this is a try
# this packages are used to find the best distribution that fits the data(the y distribution? or residuals)
library(gamlss)
library(gamlss.dist)
library(gamlss.add)
modelo_10$residuals <- modelo_10$residuals[!is.na(modelo_10$residuals)]
fit <- fitDist(modelo_10$residuals)
summary(fit)
dataDiametros <- dataDiametros[!is.na(dataDiametros$Material_10),]
fit <- fitDist(dataDiametros$Material_10,try.gamlss = TRUE)
summary(fit)
#"skew exponential power type 4    mu.link = "identity", sigma.link = "log", nu.link = "log", tau.link = "log"
dataDiametros <- dataDiametros[!is.na(dataDiametros$Area),]
plot(log(dataDiametros$Area),log(dataDiametros$Material_10))
regglm <- glm(log(Material_10) ~ log(Area) + factor(Tipo_Hoja), data=dataDiametros, family=gaussian)
summary(regglm)
#compare the coeficcients, they are a little bit different
regglm$coefficients
modelo_10$coefficients
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP2.5tot<-predict(regglm , newdata = d)
d
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
print(c(d$MP10_tot[1],(log(mergedAreas$Area[1])*pendiente+intercepto+HojaSimplefac)))
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP2.5tot<-predict(regglm , newdata = d)
d
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
print(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
summary(modelo_10)$coefficients
modelo_10 <- lm(log(Material_10) ~ log(Area) + Tipo_Hoja,data=dataDiametros[-c(62),])#[-c(32,61,62,168,242),])
View(modelo_10)
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5tot<-predict(regglm , newdata = d)
d$MP2.5tot<-exp(d$MP2.5tot)
d
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
print(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
View(d)
d$MP2.5tot.count()
d.count()
d.count(axis=1)
summary(d)
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot),' g y ',d$MP2.5tot,'g')
View(d)
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot),' g y ',d$MP10_tot,'g')
sum(d$MP2.5tot)
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,,na.rm=TRUE),' g')
sum(d$MP10_tot,,na.rm=TRUE)
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
sum(d$MP10_tot,na.rm=TRUE)
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y '+sum(d$MP10_tot,na.rm=TRUE)+' g')
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: '+sum(d$MP2.5tot,na.rm=TRUE)+' g y '+sum(d$MP10_tot,na.rm=TRUE)+' g')
print('El total de material capturado por 220 árboles de PM2.5 y PM10 es: '+sum(d$MP2.5tot,na.rm=TRUE)+' g y '+sum(d$MP10_tot,na.rm=TRUE)+' g')
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
summary(d)
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
print(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
print(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
cat(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
cat(c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
cat('/n verificación',c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
cat('/n verificación',c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
cat('     verificación',c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
View(MP2.5)
d$ratio<-d$MP10_tot/d$MP2.5_tot
View(d)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5_tot)
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5_tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
###Unite the models of Are and particulate material
#SQL practice
#ans = unique(dataDiametros[,c('Nombre.común','Tipo_Hoja')])
# sample dataframe tha is the input
#samples<- data.frame('Nombre.común'=c('Abarco','Aguacatillo'),'Area'=c(123,324))
#mergedAreas<-merge(x = samples, y =ans , by="Nombre.común")
d$MP10_tot<-predict(modelo_10, newdata = d)
d$MP10_tot<-exp(d$MP10_tot)
d$MP2.5_tot<-predict(MP2.5 , newdata = d)
d$MP2.5_tot<-exp(d$MP2.5_tot)
d
cat('El total de material capturado por 220 árboles de PM2.5 y PM10 es: ',sum(d$MP2.5_tot,na.rm=TRUE),' g y ',sum(d$MP10_tot,na.rm=TRUE),' g')
#verification
intercepto <- summary(modelo_10)$coefficients[1,1]
pendiente <- summary(modelo_10)$coefficients[2,1]
HojaSimplefac <- summary(modelo_10)$coefficients[9,1]
cat('     verificación: ',c(d$MP10_tot[1],(log(d$Area[1])*pendiente+intercepto+HojaSimplefac)))
