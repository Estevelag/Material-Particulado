library(gvlma)
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
model_data <- read_excel(path_data)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
to_eliminate <- c(62)
to_eliminate <- c(62)
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
bptest(modelo_25)
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
model_data <- read_excel(path_data)
View(model_data)
to_eliminate <- c(62)
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
gvlma(modelo_25)
View(modelo_25)
View(model_data)
modelo_10=lm(log(Material_10) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(32,61,62,168,242),])
summary(modelo_10)
anova(modelo_10)
plot(modelo_10)
#gvlma(modelo_10)
shapiro.test(modelo_10$residuals)
bptest(modelo_10)
summary(modelo_10)
anova(modelo_10)
plot(modelo_10)
gvlma(modelo_10)
gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
bptest(modelo_25)
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
model_data <- read_excel(path_data)
View(model_data)
3,8
to_eliminate <- c(62)
model_data$Diametro
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
bptest(modelo_25)
separate_rows(model_data, convert = TRUE)
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(tidyr)
install.packages("tidyr")
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(tidyr)
devtools::install_github("hadley/tidyr")
View(model_data)
View(model_data)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
path_data2<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.csv"
model_data <- read_excel(path_data)
model_data2<- read.csv(path_data2,sep = ';')
View(model_data2)
View(model_data2)
to_eliminate <- c(62)
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
bptest(modelo_25)
install.packages("orcutt")
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(orcutt)
to_eliminate <- c(62)
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
bptest(modelo_25)
to_eliminate <- c(62)
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
#summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
shapiro.test(modelo_25$residuals)
#bptest(modelo_25)
to_eliminate <- c(62)
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
#summary(modelo_25)
anova(modelo_25)
plot(modelo_25)
#gvlma(modelo_25)
#shapiro.test(modelo_25$residuals)
shapiro.test(reg2$residuals)
#bptest(modelo_25)
summary(modelo_25)
shapiro.test(modelo_25$residuals)
anova(modelo_25)
plot(modelo_25)
summary(modelo_25)
shapiro.test(modelo_25$residuals)
anova(modelo_25)
plot(modelo_25)
bptest(modelo_25)
#gvlma(modelo_25)
to_eliminate <- c(62)
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
anova(reg2)
install.packages("broom")
library(broom)
anova(tidy(reg2))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages(c("ade4", "backports", "bbmle", "blob", "bslib", "cachem", "callr", "clipr", "credentials", "curl", "dbplyr", "digest", "dplyr", "DT", "gert", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "jpeg", "jsonlite", "knitr", "later", "matrixStats", "openssl", "packrat", "pillar", "pkgload", "plotrix", "processx", "RcppArmadillo", "RCurl", "readr", "rmarkdown", "roxygen2", "rsconnect", "RSQLite", "shiny", "stringi", "tibble", "tinytex", "vctrs", "vroom", "waldo", "withr", "xfun", "XML", "zoo"))
install.packages("tidyr")
install.packages("vctrs")
install.packages("tidyr")
cbind(model_data,rbind(NA,model.frame(reg2)))
cbind(model_data,rbind(NA,model.frame(reg2)))
cbind(model_data3,rbind(NA,model.frame(reg2)))
bptest(reg2)
cbind(model_data[-to_eliminate,],rbind(NA,model.frame(reg2)))
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(orcutt)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
path_data2<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.csv"
model_data <- read_excel(path_data)
model_data2<- read.csv(path_data2,sep = ';')
to_eliminate <- c(62)
model_data3<-model_data[-to_eliminate,]
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
cbind(model_data[-to_eliminate,],rbind(NA,model.frame(reg2)))
reg2
to_eliminate <- c(62)
model_data3<-model_data[-to_eliminate,]
# Separattion by / and - points and comass for numbers, replace , by .
modelo_25=lm(log(Material_2.5) ~ log(Area) + Tipo_Hoja + 0, data=model_data[-to_eliminate,])#[-c(61,62,32,168,242),])
reg2<-cochrane.orcutt(modelo_25)
summary(reg2)
bptest(reg2)
#cbind(model_data[-to_eliminate,],rbind(NA,model.frame(reg2))) #The Anova doesnt work bc some data was used to make the transformation
#anova(reg2)
gvlma(reg2)
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("vctrs")
install.packages("vctrs")
library(lmtest)
library(readxl)
library(gvlma)
library(ggplot2)
library(orcutt)
library(tidyr)
library(broom)
path_data<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.xlsx"
path_data2<-"../data/Datos_para_modelo/Datos_MP_BiomasaEst_Altura.csv"
model_data <- read_excel(path_data)
model_data2<- read.csv(path_data2,sep = ';')
View(model_data2)
i in range(1,14)
for (i in range(1,14)){print(i)}
for (i in 1:14){print(i)}
model_data2$Diametro[1]
is.na(model_data2$name n[1])
is.na(model_data2$Diametro[1])
model_data2$Diametro[0]
model_data2$Diametro[1]
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-'Diametro.'+i
if(is.na(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-'Diametro.'+str(i)
if(is.na(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-'Diametro.'+as.character(i)
if(is.na(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
paste(c("Diametro"),i, sep = "", collapse = True)
paste(c("Diametro"),i, sep = "", collapse = TRUE)
paste(c("Diametro"),i, sep = "", collapse = NULL)
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-paste(c("Diametro."),i, sep = "", collapse = NULL)
if(is.na(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
name
model_data2$name[j]
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-paste(c("Diametro."),i, sep = "", collapse = NULL)
if(is.null(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
#dataf$NEwbiomass<-estimatedtot
estimatedtot<-c()
for (j in 1:length(model_data2$Diametro)){
Bioomasaindpred<-exp(7.6109+0.0643*(model_data2$Diametro[j])/pi)
for (i in 1:14){
name<-paste(c("Diametro."),i, sep = "", collapse = NULL)
if(is.null(model_data2$name[j])){}
else{
Bioomasaindpred<-Bioomasaindpred+exp(7.6109+0.0643*(model_data2$name[j])/pi)# This gets the diameter of the perimeter measured
}}
estimatedtot <- c(estimatedtot, Bioomasaindpred)
}
model_data2$NEwbiomass<-estimatedtot
